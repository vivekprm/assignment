spring.data.mongodb.uri=mongodb://root:example@hyd-mishrav-m.ds.ad.adp.com:27017/bookmark-store?authSource=admin&authMechanism=SCRAM-SHA-1

### H2 Database (Default is in-memory) ###
# spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# To access h2 console UI. we can navigate to http://localhost:8080/h2-console
spring.h2.console.enabled=true
# console path  /h2-console is relative to the address and port of our running application.
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
# disable remote access
spring.h2.console.settings.web-allow-others=false
# By design, the in-memory database is volatile and data will be lost when we restart the application.
# We can change that behavior by using h2 as file-based storage. To do this we need to update the
# spring.datasource.url:
spring.datasource.url=jdbc:h2:file:/Users/mishrav/Projects/spring-angular-app/bookmark-store/src/main/resources/demo


### HSQLDB as fileDB ###
#spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver
#spring.datasource.url=jdbc:hsqldb:hsql://localhost/testdb
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=update

### HSQLDB as in memory DB ###
#spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver
#spring.datasource.url=jdbc:hsqldb:mem:testdb;DB_CLOSE_DELAY=-1
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.hibernate.ddl-auto=create

### Comment mysql properties to use hsql ###
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/comments
#spring.datasource.username=root
#spring.datasource.password=